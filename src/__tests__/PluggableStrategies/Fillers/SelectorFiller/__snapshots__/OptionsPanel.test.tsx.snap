// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SelectorFiller OptionsPanel rendering completely different options renders 1`] = `
<withStyles(FormControl)
  fullWidth={true}
>
  <TextField
    error={false}
    helperText="Leave empty to only fill if there's a selector specified in the pass file"
    id="defaultUsernameSelector"
    label="Default username input css selector"
    margin="normal"
    onChange={[Function]}
    required={false}
    select={false}
    value=""
  />
  <TextField
    error={false}
    helperText="Leave empty to only fill if there's a selector specified in the pass file"
    id="defaultPasswordSelector"
    label="Default password input css selector"
    margin="normal"
    onChange={[Function]}
    required={false}
    select={false}
    value=""
  />
  <withStyles(FormControlLabel)
    control={
      <withStyles(Checkbox)
        checked={false}
        onChange={[Function]}
      />
    }
    id="fillOnlyFirstMatchingField"
    label="Fill only the first matching input field"
  />
  <withStyles(Typography)
    className="OptionsPanelComponent-topPadding-1"
    gutterBottom={true}
    type="title"
  >
    Selectors from pass file
  </withStyles(Typography)>
  <withStyles(Typography)
    type="subheading"
  >
    If the pass file contains a line starting with one of these prefixes, that selector will be used instead.
  </withStyles(Typography)>
  <TextField
    id="usernameSelectorPrefix"
    label="username selector prefix"
    margin="normal"
    onChange={[Function]}
    required={false}
    select={false}
    value="#user"
  />
  <TextField
    id="passwordSelectorPrefix"
    label="password selector prefix"
    margin="normal"
    onChange={[Function]}
    required={false}
    select={false}
    value="#pass"
  />
</withStyles(FormControl)>
`;

exports[`SelectorFiller OptionsPanel rendering default values renders 1`] = `
<withStyles(FormControl)
  fullWidth={true}
>
  <TextField
    error={false}
    helperText="Leave empty to only fill if there's a selector specified in the pass file"
    id="defaultUsernameSelector"
    label="Default username input css selector"
    margin="normal"
    onChange={[Function]}
    required={false}
    select={false}
    value="input[autocomplete=\\"username\\"],input[type=\\"email\\"]"
  />
  <TextField
    error={false}
    helperText="Leave empty to only fill if there's a selector specified in the pass file"
    id="defaultPasswordSelector"
    label="Default password input css selector"
    margin="normal"
    onChange={[Function]}
    required={false}
    select={false}
    value="input[type=\\"password\\"]"
  />
  <withStyles(FormControlLabel)
    control={
      <withStyles(Checkbox)
        checked={true}
        onChange={[Function]}
      />
    }
    id="fillOnlyFirstMatchingField"
    label="Fill only the first matching input field"
  />
  <withStyles(Typography)
    className="OptionsPanelComponent-topPadding-1"
    gutterBottom={true}
    type="title"
  >
    Selectors from pass file
  </withStyles(Typography)>
  <withStyles(Typography)
    type="subheading"
  >
    If the pass file contains a line starting with one of these prefixes, that selector will be used instead.
  </withStyles(Typography)>
  <TextField
    id="usernameSelectorPrefix"
    label="username selector prefix"
    margin="normal"
    onChange={[Function]}
    required={false}
    select={false}
    value=""
  />
  <TextField
    id="passwordSelectorPrefix"
    label="password selector prefix"
    margin="normal"
    onChange={[Function]}
    required={false}
    select={false}
    value=""
  />
</withStyles(FormControl)>
`;
