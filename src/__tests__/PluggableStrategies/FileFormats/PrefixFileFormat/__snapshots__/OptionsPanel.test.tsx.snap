// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PrefixFileFormat OptionsPanel rendering completely different options renders 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <OptionsPanel
    options={
      Immutable.Map {
        "passwordFirstLine": false,
        "passwordPrefix": "pw:",
        "usernamePrefix": "lg:",
        "trimWhitespace": false,
      }
    }
    updateOptions={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <withStyles(FormControlLabel)
          control={
            <withStyles(Checkbox)
              checked={false}
              onChange={[Function]}
            />
          }
          id="passwordFirstLine"
          label="Password is in first line (without prefix)"
        />,
        <TextField
          id="passwordPrefix"
          label="password prefix"
          onChange={[Function]}
          required={false}
          select={false}
          value="pw:"
        />,
        <TextField
          id="usernamePrefix"
          label="username prefix"
          onChange={[Function]}
          required={false}
          select={false}
          value="lg:"
        />,
        <withStyles(FormControlLabel)
          control={
            <withStyles(Checkbox)
              checked={false}
              onChange={[Function]}
            />
          }
          id="trimWhitespace"
          label="Trim whitespace"
        />,
      ],
      "fullWidth": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "control": <withStyles(Checkbox)
            checked={false}
            onChange={[Function]}
          />,
          "id": "passwordFirstLine",
          "label": "Password is in first line (without prefix)",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "function",
        "props": Object {
          "id": "passwordPrefix",
          "label": "password prefix",
          "onChange": [Function],
          "required": false,
          "select": false,
          "value": "pw:",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "function",
        "props": Object {
          "id": "usernamePrefix",
          "label": "username prefix",
          "onChange": [Function],
          "required": false,
          "select": false,
          "value": "lg:",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "control": <withStyles(Checkbox)
            checked={false}
            onChange={[Function]}
          />,
          "id": "trimWhitespace",
          "label": "Trim whitespace",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <withStyles(FormControlLabel)
            control={
              <withStyles(Checkbox)
                checked={false}
                onChange={[Function]}
              />
            }
            id="passwordFirstLine"
            label="Password is in first line (without prefix)"
          />,
          <TextField
            id="passwordPrefix"
            label="password prefix"
            onChange={[Function]}
            required={false}
            select={false}
            value="pw:"
          />,
          <TextField
            id="usernamePrefix"
            label="username prefix"
            onChange={[Function]}
            required={false}
            select={false}
            value="lg:"
          />,
          <withStyles(FormControlLabel)
            control={
              <withStyles(Checkbox)
                checked={false}
                onChange={[Function]}
              />
            }
            id="trimWhitespace"
            label="Trim whitespace"
          />,
        ],
        "fullWidth": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "control": <withStyles(Checkbox)
              checked={false}
              onChange={[Function]}
            />,
            "id": "passwordFirstLine",
            "label": "Password is in first line (without prefix)",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "function",
          "props": Object {
            "id": "passwordPrefix",
            "label": "password prefix",
            "onChange": [Function],
            "required": false,
            "select": false,
            "value": "pw:",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "function",
          "props": Object {
            "id": "usernamePrefix",
            "label": "username prefix",
            "onChange": [Function],
            "required": false,
            "select": false,
            "value": "lg:",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "control": <withStyles(Checkbox)
              checked={false}
              onChange={[Function]}
            />,
            "id": "trimWhitespace",
            "label": "Trim whitespace",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`PrefixFileFormat OptionsPanel rendering default values renders 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <OptionsPanel
    options={
      Immutable.Map {
        "passwordFirstLine": true,
        "passwordPrefix": "",
        "usernamePrefix": "login:",
        "trimWhitespace": true,
      }
    }
    updateOptions={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <withStyles(FormControlLabel)
          control={
            <withStyles(Checkbox)
              checked={true}
              onChange={[Function]}
            />
          }
          id="passwordFirstLine"
          label="Password is in first line (without prefix)"
        />,
        false,
        <TextField
          id="usernamePrefix"
          label="username prefix"
          onChange={[Function]}
          required={false}
          select={false}
          value="login:"
        />,
        <withStyles(FormControlLabel)
          control={
            <withStyles(Checkbox)
              checked={true}
              onChange={[Function]}
            />
          }
          id="trimWhitespace"
          label="Trim whitespace"
        />,
      ],
      "fullWidth": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "control": <withStyles(Checkbox)
            checked={true}
            onChange={[Function]}
          />,
          "id": "passwordFirstLine",
          "label": "Password is in first line (without prefix)",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      false,
      Object {
        "instance": null,
        "key": null,
        "nodeType": "function",
        "props": Object {
          "id": "usernamePrefix",
          "label": "username prefix",
          "onChange": [Function],
          "required": false,
          "select": false,
          "value": "login:",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "control": <withStyles(Checkbox)
            checked={true}
            onChange={[Function]}
          />,
          "id": "trimWhitespace",
          "label": "Trim whitespace",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <withStyles(FormControlLabel)
            control={
              <withStyles(Checkbox)
                checked={true}
                onChange={[Function]}
              />
            }
            id="passwordFirstLine"
            label="Password is in first line (without prefix)"
          />,
          false,
          <TextField
            id="usernamePrefix"
            label="username prefix"
            onChange={[Function]}
            required={false}
            select={false}
            value="login:"
          />,
          <withStyles(FormControlLabel)
            control={
              <withStyles(Checkbox)
                checked={true}
                onChange={[Function]}
              />
            }
            id="trimWhitespace"
            label="Trim whitespace"
          />,
        ],
        "fullWidth": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "control": <withStyles(Checkbox)
              checked={true}
              onChange={[Function]}
            />,
            "id": "passwordFirstLine",
            "label": "Password is in first line (without prefix)",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        false,
        Object {
          "instance": null,
          "key": null,
          "nodeType": "function",
          "props": Object {
            "id": "usernamePrefix",
            "label": "username prefix",
            "onChange": [Function],
            "required": false,
            "select": false,
            "value": "login:",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "control": <withStyles(Checkbox)
              checked={true}
              onChange={[Function]}
            />,
            "id": "trimWhitespace",
            "label": "Trim whitespace",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`PrefixFileFormat OptionsPanel rendering without passwordPrefix renders 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <OptionsPanel
    options={
      Immutable.Map {
        "passwordFirstLine": false,
        "passwordPrefix": "",
        "usernamePrefix": "login:",
        "trimWhitespace": true,
      }
    }
    updateOptions={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <withStyles(FormControlLabel)
          control={
            <withStyles(Checkbox)
              checked={false}
              onChange={[Function]}
            />
          }
          id="passwordFirstLine"
          label="Password is in first line (without prefix)"
        />,
        <TextField
          id="passwordPrefix"
          label="password prefix"
          onChange={[Function]}
          required={false}
          select={false}
          value=""
        />,
        <TextField
          id="usernamePrefix"
          label="username prefix"
          onChange={[Function]}
          required={false}
          select={false}
          value="login:"
        />,
        <withStyles(FormControlLabel)
          control={
            <withStyles(Checkbox)
              checked={true}
              onChange={[Function]}
            />
          }
          id="trimWhitespace"
          label="Trim whitespace"
        />,
      ],
      "fullWidth": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "control": <withStyles(Checkbox)
            checked={false}
            onChange={[Function]}
          />,
          "id": "passwordFirstLine",
          "label": "Password is in first line (without prefix)",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "function",
        "props": Object {
          "id": "passwordPrefix",
          "label": "password prefix",
          "onChange": [Function],
          "required": false,
          "select": false,
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "function",
        "props": Object {
          "id": "usernamePrefix",
          "label": "username prefix",
          "onChange": [Function],
          "required": false,
          "select": false,
          "value": "login:",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "control": <withStyles(Checkbox)
            checked={true}
            onChange={[Function]}
          />,
          "id": "trimWhitespace",
          "label": "Trim whitespace",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <withStyles(FormControlLabel)
            control={
              <withStyles(Checkbox)
                checked={false}
                onChange={[Function]}
              />
            }
            id="passwordFirstLine"
            label="Password is in first line (without prefix)"
          />,
          <TextField
            id="passwordPrefix"
            label="password prefix"
            onChange={[Function]}
            required={false}
            select={false}
            value=""
          />,
          <TextField
            id="usernamePrefix"
            label="username prefix"
            onChange={[Function]}
            required={false}
            select={false}
            value="login:"
          />,
          <withStyles(FormControlLabel)
            control={
              <withStyles(Checkbox)
                checked={true}
                onChange={[Function]}
              />
            }
            id="trimWhitespace"
            label="Trim whitespace"
          />,
        ],
        "fullWidth": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "control": <withStyles(Checkbox)
              checked={false}
              onChange={[Function]}
            />,
            "id": "passwordFirstLine",
            "label": "Password is in first line (without prefix)",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "function",
          "props": Object {
            "id": "passwordPrefix",
            "label": "password prefix",
            "onChange": [Function],
            "required": false,
            "select": false,
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "function",
          "props": Object {
            "id": "usernamePrefix",
            "label": "username prefix",
            "onChange": [Function],
            "required": false,
            "select": false,
            "value": "login:",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "control": <withStyles(Checkbox)
              checked={true}
              onChange={[Function]}
            />,
            "id": "trimWhitespace",
            "label": "Trim whitespace",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
