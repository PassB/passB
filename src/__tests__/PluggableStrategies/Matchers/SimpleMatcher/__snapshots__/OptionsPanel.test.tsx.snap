// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SimpleMatcher OptionsPanel rendering autoWww false renders 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <OptionsPanel
    options={
      Immutable.Map {
        "autoWww": false,
        "matchInSubDirs": false,
        "ignoreLastPart": false,
        "requireFullMatch": false,
      }
    }
    updateOptions={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <withStyles(FormControlLabel)
          control={
            <withStyles(Checkbox)
              checked={false}
              onChange={[Function]}
            />
          }
          id="autoWww"
          label="Ignore wwww. prefix"
        />,
        <withStyles(FormControlLabel)
          control={
            <withStyles(Checkbox)
              checked={false}
              onChange={[Function]}
            />
          }
          id="matchInSubDirs"
          label="Also match in subdirectories"
        />,
        <withStyles(FormControlLabel)
          control={
            <withStyles(Checkbox)
              checked={false}
              onChange={[Function]}
            />
          }
          id="ignoreLastPart"
          label="Ignore the last part of the password path (if you are using it as your login name)"
        />,
        <withStyles(FormControlLabel)
          control={
            <withStyles(Checkbox)
              checked={false}
              onChange={[Function]}
            />
          }
          id="requireFullMatch"
          label="Require exact match"
        />,
      ],
      "fullWidth": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "control": <withStyles(Checkbox)
            checked={false}
            onChange={[Function]}
          />,
          "id": "autoWww",
          "label": "Ignore wwww. prefix",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "control": <withStyles(Checkbox)
            checked={false}
            onChange={[Function]}
          />,
          "id": "matchInSubDirs",
          "label": "Also match in subdirectories",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "control": <withStyles(Checkbox)
            checked={false}
            onChange={[Function]}
          />,
          "id": "ignoreLastPart",
          "label": "Ignore the last part of the password path (if you are using it as your login name)",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "control": <withStyles(Checkbox)
            checked={false}
            onChange={[Function]}
          />,
          "id": "requireFullMatch",
          "label": "Require exact match",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <withStyles(FormControlLabel)
            control={
              <withStyles(Checkbox)
                checked={false}
                onChange={[Function]}
              />
            }
            id="autoWww"
            label="Ignore wwww. prefix"
          />,
          <withStyles(FormControlLabel)
            control={
              <withStyles(Checkbox)
                checked={false}
                onChange={[Function]}
              />
            }
            id="matchInSubDirs"
            label="Also match in subdirectories"
          />,
          <withStyles(FormControlLabel)
            control={
              <withStyles(Checkbox)
                checked={false}
                onChange={[Function]}
              />
            }
            id="ignoreLastPart"
            label="Ignore the last part of the password path (if you are using it as your login name)"
          />,
          <withStyles(FormControlLabel)
            control={
              <withStyles(Checkbox)
                checked={false}
                onChange={[Function]}
              />
            }
            id="requireFullMatch"
            label="Require exact match"
          />,
        ],
        "fullWidth": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "control": <withStyles(Checkbox)
              checked={false}
              onChange={[Function]}
            />,
            "id": "autoWww",
            "label": "Ignore wwww. prefix",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "control": <withStyles(Checkbox)
              checked={false}
              onChange={[Function]}
            />,
            "id": "matchInSubDirs",
            "label": "Also match in subdirectories",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "control": <withStyles(Checkbox)
              checked={false}
              onChange={[Function]}
            />,
            "id": "ignoreLastPart",
            "label": "Ignore the last part of the password path (if you are using it as your login name)",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "control": <withStyles(Checkbox)
              checked={false}
              onChange={[Function]}
            />,
            "id": "requireFullMatch",
            "label": "Require exact match",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`SimpleMatcher OptionsPanel rendering default values renders 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <OptionsPanel
    options={
      Immutable.Map {
        "autoWww": true,
        "matchInSubDirs": false,
        "ignoreLastPart": false,
        "requireFullMatch": false,
      }
    }
    updateOptions={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <withStyles(FormControlLabel)
          control={
            <withStyles(Checkbox)
              checked={true}
              onChange={[Function]}
            />
          }
          id="autoWww"
          label="Ignore wwww. prefix"
        />,
        <withStyles(FormControlLabel)
          control={
            <withStyles(Checkbox)
              checked={false}
              onChange={[Function]}
            />
          }
          id="matchInSubDirs"
          label="Also match in subdirectories"
        />,
        <withStyles(FormControlLabel)
          control={
            <withStyles(Checkbox)
              checked={false}
              onChange={[Function]}
            />
          }
          id="ignoreLastPart"
          label="Ignore the last part of the password path (if you are using it as your login name)"
        />,
        <withStyles(FormControlLabel)
          control={
            <withStyles(Checkbox)
              checked={false}
              onChange={[Function]}
            />
          }
          id="requireFullMatch"
          label="Require exact match"
        />,
      ],
      "fullWidth": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "control": <withStyles(Checkbox)
            checked={true}
            onChange={[Function]}
          />,
          "id": "autoWww",
          "label": "Ignore wwww. prefix",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "control": <withStyles(Checkbox)
            checked={false}
            onChange={[Function]}
          />,
          "id": "matchInSubDirs",
          "label": "Also match in subdirectories",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "control": <withStyles(Checkbox)
            checked={false}
            onChange={[Function]}
          />,
          "id": "ignoreLastPart",
          "label": "Ignore the last part of the password path (if you are using it as your login name)",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "control": <withStyles(Checkbox)
            checked={false}
            onChange={[Function]}
          />,
          "id": "requireFullMatch",
          "label": "Require exact match",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <withStyles(FormControlLabel)
            control={
              <withStyles(Checkbox)
                checked={true}
                onChange={[Function]}
              />
            }
            id="autoWww"
            label="Ignore wwww. prefix"
          />,
          <withStyles(FormControlLabel)
            control={
              <withStyles(Checkbox)
                checked={false}
                onChange={[Function]}
              />
            }
            id="matchInSubDirs"
            label="Also match in subdirectories"
          />,
          <withStyles(FormControlLabel)
            control={
              <withStyles(Checkbox)
                checked={false}
                onChange={[Function]}
              />
            }
            id="ignoreLastPart"
            label="Ignore the last part of the password path (if you are using it as your login name)"
          />,
          <withStyles(FormControlLabel)
            control={
              <withStyles(Checkbox)
                checked={false}
                onChange={[Function]}
              />
            }
            id="requireFullMatch"
            label="Require exact match"
          />,
        ],
        "fullWidth": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "control": <withStyles(Checkbox)
              checked={true}
              onChange={[Function]}
            />,
            "id": "autoWww",
            "label": "Ignore wwww. prefix",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "control": <withStyles(Checkbox)
              checked={false}
              onChange={[Function]}
            />,
            "id": "matchInSubDirs",
            "label": "Also match in subdirectories",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "control": <withStyles(Checkbox)
              checked={false}
              onChange={[Function]}
            />,
            "id": "ignoreLastPart",
            "label": "Ignore the last part of the password path (if you are using it as your login name)",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "control": <withStyles(Checkbox)
              checked={false}
              onChange={[Function]}
            />,
            "id": "requireFullMatch",
            "label": "Require exact match",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`SimpleMatcher OptionsPanel rendering ignoreLastPart true renders 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <OptionsPanel
    options={
      Immutable.Map {
        "autoWww": true,
        "matchInSubDirs": false,
        "ignoreLastPart": true,
        "requireFullMatch": false,
      }
    }
    updateOptions={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <withStyles(FormControlLabel)
          control={
            <withStyles(Checkbox)
              checked={true}
              onChange={[Function]}
            />
          }
          id="autoWww"
          label="Ignore wwww. prefix"
        />,
        <withStyles(FormControlLabel)
          control={
            <withStyles(Checkbox)
              checked={false}
              onChange={[Function]}
            />
          }
          id="matchInSubDirs"
          label="Also match in subdirectories"
        />,
        <withStyles(FormControlLabel)
          control={
            <withStyles(Checkbox)
              checked={true}
              onChange={[Function]}
            />
          }
          id="ignoreLastPart"
          label="Ignore the last part of the password path (if you are using it as your login name)"
        />,
        <withStyles(FormControlLabel)
          control={
            <withStyles(Checkbox)
              checked={false}
              onChange={[Function]}
            />
          }
          id="requireFullMatch"
          label="Require exact match"
        />,
      ],
      "fullWidth": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "control": <withStyles(Checkbox)
            checked={true}
            onChange={[Function]}
          />,
          "id": "autoWww",
          "label": "Ignore wwww. prefix",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "control": <withStyles(Checkbox)
            checked={false}
            onChange={[Function]}
          />,
          "id": "matchInSubDirs",
          "label": "Also match in subdirectories",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "control": <withStyles(Checkbox)
            checked={true}
            onChange={[Function]}
          />,
          "id": "ignoreLastPart",
          "label": "Ignore the last part of the password path (if you are using it as your login name)",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "control": <withStyles(Checkbox)
            checked={false}
            onChange={[Function]}
          />,
          "id": "requireFullMatch",
          "label": "Require exact match",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <withStyles(FormControlLabel)
            control={
              <withStyles(Checkbox)
                checked={true}
                onChange={[Function]}
              />
            }
            id="autoWww"
            label="Ignore wwww. prefix"
          />,
          <withStyles(FormControlLabel)
            control={
              <withStyles(Checkbox)
                checked={false}
                onChange={[Function]}
              />
            }
            id="matchInSubDirs"
            label="Also match in subdirectories"
          />,
          <withStyles(FormControlLabel)
            control={
              <withStyles(Checkbox)
                checked={true}
                onChange={[Function]}
              />
            }
            id="ignoreLastPart"
            label="Ignore the last part of the password path (if you are using it as your login name)"
          />,
          <withStyles(FormControlLabel)
            control={
              <withStyles(Checkbox)
                checked={false}
                onChange={[Function]}
              />
            }
            id="requireFullMatch"
            label="Require exact match"
          />,
        ],
        "fullWidth": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "control": <withStyles(Checkbox)
              checked={true}
              onChange={[Function]}
            />,
            "id": "autoWww",
            "label": "Ignore wwww. prefix",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "control": <withStyles(Checkbox)
              checked={false}
              onChange={[Function]}
            />,
            "id": "matchInSubDirs",
            "label": "Also match in subdirectories",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "control": <withStyles(Checkbox)
              checked={true}
              onChange={[Function]}
            />,
            "id": "ignoreLastPart",
            "label": "Ignore the last part of the password path (if you are using it as your login name)",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "control": <withStyles(Checkbox)
              checked={false}
              onChange={[Function]}
            />,
            "id": "requireFullMatch",
            "label": "Require exact match",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`SimpleMatcher OptionsPanel rendering matchInSubDirs true renders 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <OptionsPanel
    options={
      Immutable.Map {
        "autoWww": true,
        "matchInSubDirs": true,
        "ignoreLastPart": false,
        "requireFullMatch": false,
      }
    }
    updateOptions={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <withStyles(FormControlLabel)
          control={
            <withStyles(Checkbox)
              checked={true}
              onChange={[Function]}
            />
          }
          id="autoWww"
          label="Ignore wwww. prefix"
        />,
        <withStyles(FormControlLabel)
          control={
            <withStyles(Checkbox)
              checked={true}
              onChange={[Function]}
            />
          }
          id="matchInSubDirs"
          label="Also match in subdirectories"
        />,
        <withStyles(FormControlLabel)
          control={
            <withStyles(Checkbox)
              checked={false}
              onChange={[Function]}
            />
          }
          id="ignoreLastPart"
          label="Ignore the last part of the password path (if you are using it as your login name)"
        />,
        <withStyles(FormControlLabel)
          control={
            <withStyles(Checkbox)
              checked={false}
              onChange={[Function]}
            />
          }
          id="requireFullMatch"
          label="Require exact match"
        />,
      ],
      "fullWidth": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "control": <withStyles(Checkbox)
            checked={true}
            onChange={[Function]}
          />,
          "id": "autoWww",
          "label": "Ignore wwww. prefix",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "control": <withStyles(Checkbox)
            checked={true}
            onChange={[Function]}
          />,
          "id": "matchInSubDirs",
          "label": "Also match in subdirectories",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "control": <withStyles(Checkbox)
            checked={false}
            onChange={[Function]}
          />,
          "id": "ignoreLastPart",
          "label": "Ignore the last part of the password path (if you are using it as your login name)",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "control": <withStyles(Checkbox)
            checked={false}
            onChange={[Function]}
          />,
          "id": "requireFullMatch",
          "label": "Require exact match",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <withStyles(FormControlLabel)
            control={
              <withStyles(Checkbox)
                checked={true}
                onChange={[Function]}
              />
            }
            id="autoWww"
            label="Ignore wwww. prefix"
          />,
          <withStyles(FormControlLabel)
            control={
              <withStyles(Checkbox)
                checked={true}
                onChange={[Function]}
              />
            }
            id="matchInSubDirs"
            label="Also match in subdirectories"
          />,
          <withStyles(FormControlLabel)
            control={
              <withStyles(Checkbox)
                checked={false}
                onChange={[Function]}
              />
            }
            id="ignoreLastPart"
            label="Ignore the last part of the password path (if you are using it as your login name)"
          />,
          <withStyles(FormControlLabel)
            control={
              <withStyles(Checkbox)
                checked={false}
                onChange={[Function]}
              />
            }
            id="requireFullMatch"
            label="Require exact match"
          />,
        ],
        "fullWidth": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "control": <withStyles(Checkbox)
              checked={true}
              onChange={[Function]}
            />,
            "id": "autoWww",
            "label": "Ignore wwww. prefix",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "control": <withStyles(Checkbox)
              checked={true}
              onChange={[Function]}
            />,
            "id": "matchInSubDirs",
            "label": "Also match in subdirectories",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "control": <withStyles(Checkbox)
              checked={false}
              onChange={[Function]}
            />,
            "id": "ignoreLastPart",
            "label": "Ignore the last part of the password path (if you are using it as your login name)",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "control": <withStyles(Checkbox)
              checked={false}
              onChange={[Function]}
            />,
            "id": "requireFullMatch",
            "label": "Require exact match",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`SimpleMatcher OptionsPanel rendering requireFullMatch true renders 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <OptionsPanel
    options={
      Immutable.Map {
        "autoWww": true,
        "matchInSubDirs": false,
        "ignoreLastPart": false,
        "requireFullMatch": true,
      }
    }
    updateOptions={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <withStyles(FormControlLabel)
          control={
            <withStyles(Checkbox)
              checked={true}
              onChange={[Function]}
            />
          }
          id="autoWww"
          label="Ignore wwww. prefix"
        />,
        <withStyles(FormControlLabel)
          control={
            <withStyles(Checkbox)
              checked={false}
              onChange={[Function]}
            />
          }
          id="matchInSubDirs"
          label="Also match in subdirectories"
        />,
        <withStyles(FormControlLabel)
          control={
            <withStyles(Checkbox)
              checked={false}
              onChange={[Function]}
            />
          }
          id="ignoreLastPart"
          label="Ignore the last part of the password path (if you are using it as your login name)"
        />,
        <withStyles(FormControlLabel)
          control={
            <withStyles(Checkbox)
              checked={true}
              onChange={[Function]}
            />
          }
          id="requireFullMatch"
          label="Require exact match"
        />,
      ],
      "fullWidth": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "control": <withStyles(Checkbox)
            checked={true}
            onChange={[Function]}
          />,
          "id": "autoWww",
          "label": "Ignore wwww. prefix",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "control": <withStyles(Checkbox)
            checked={false}
            onChange={[Function]}
          />,
          "id": "matchInSubDirs",
          "label": "Also match in subdirectories",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "control": <withStyles(Checkbox)
            checked={false}
            onChange={[Function]}
          />,
          "id": "ignoreLastPart",
          "label": "Ignore the last part of the password path (if you are using it as your login name)",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "control": <withStyles(Checkbox)
            checked={true}
            onChange={[Function]}
          />,
          "id": "requireFullMatch",
          "label": "Require exact match",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <withStyles(FormControlLabel)
            control={
              <withStyles(Checkbox)
                checked={true}
                onChange={[Function]}
              />
            }
            id="autoWww"
            label="Ignore wwww. prefix"
          />,
          <withStyles(FormControlLabel)
            control={
              <withStyles(Checkbox)
                checked={false}
                onChange={[Function]}
              />
            }
            id="matchInSubDirs"
            label="Also match in subdirectories"
          />,
          <withStyles(FormControlLabel)
            control={
              <withStyles(Checkbox)
                checked={false}
                onChange={[Function]}
              />
            }
            id="ignoreLastPart"
            label="Ignore the last part of the password path (if you are using it as your login name)"
          />,
          <withStyles(FormControlLabel)
            control={
              <withStyles(Checkbox)
                checked={true}
                onChange={[Function]}
              />
            }
            id="requireFullMatch"
            label="Require exact match"
          />,
        ],
        "fullWidth": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "control": <withStyles(Checkbox)
              checked={true}
              onChange={[Function]}
            />,
            "id": "autoWww",
            "label": "Ignore wwww. prefix",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "control": <withStyles(Checkbox)
              checked={false}
              onChange={[Function]}
            />,
            "id": "matchInSubDirs",
            "label": "Also match in subdirectories",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "control": <withStyles(Checkbox)
              checked={false}
              onChange={[Function]}
            />,
            "id": "ignoreLastPart",
            "label": "Ignore the last part of the password path (if you are using it as your login name)",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "control": <withStyles(Checkbox)
              checked={true}
              onChange={[Function]}
            />,
            "id": "requireFullMatch",
            "label": "Require exact match",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
